#ifndef WIFI_WEB_BASE64_H
#define WIFI_WEB_BASE64_H

#include "inttypes.h"

#ifdef __cplusplus
extern "C" {
#endif

/// @brief  Encode table
static const char encode_base64_table[] = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";

/// @brief Decode table
static const uint8_t decode_base64_table [] = {
  0x64, 0x64, 0x64, 0x64, 0x64, 0x64, 0x64, 0x64, // ? ? ? ? ? ? ? ?
  0x64, 0x64, 0x64, 0x64, 0x64, 0x64, 0x64, 0x64, // ? ? ? ? ? ? ? ?
  0x64, 0x64, 0x64, 0x64, 0x64, 0x64, 0x64, 0x64, // ? ? ? ? ? ? ? ?
  0x64, 0x64, 0x64, 0x64, 0x64, 0x64, 0x64, 0x64, // ? ? ? ? ? ? ? ?
  0x64, 0x64, 0x64, 0x64, 0x64, 0x64, 0x64, 0x64, // ? ? ? ? ? ? ? ?
  0x64, 0x64, 0x64, 0x3E, 0x64, 0x64, 0x64, 0x3F, // ? ? ? ? ? ? ? +
  0x34, 0x35, 0x36, 0x37, 0x38, 0x39, 0x3A, 0x3B, // 0 1 2 3 4 5 6 7
  0x3C, 0x3D, 0x64, 0x64, 0x64, 0x64, 0x64, 0x64, // 8 9 ? ? ? ? ? ?
  0x64, 0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, // ? A B C D E F G
  0x07, 0x08, 0x09, 0x0A, 0x0B, 0x0C, 0x0D, 0x0E, // H I J K L M N O
  0x0F, 0x10, 0x11, 0x12, 0x13, 0x14, 0x15, 0x16, // P Q R S T U V W
  0x17, 0x18, 0x19, 0x64, 0x64, 0x64, 0x64, 0x64, // X Y Z ? ? ? ? ?
  0x64, 0x1A, 0x1B, 0x1C, 0x1D, 0x1E, 0x1F, 0x20, // ? a b c d e f g
  0x21, 0x22, 0x23, 0x24, 0x25, 0x26, 0x27, 0x28, // h i j k l m n o
  0x29, 0x2A, 0x2B, 0x2C, 0x2D, 0x2E, 0x2F, 0x30, // p q r s t u v w
  0x31, 0x32, 0x33, 0x64, 0x64, 0x64, 0x64, 0x64  // x y z ? ? ? ? ?
};


/**
 * @brief Decodifica uma cadeia de string em base64
 * 
 * @param [out] base64arr 
 * @param [in] base64str 
 * @return 
 * int tamanho do array lido |
 * -1, em caso de erro
**/
int base64_to_uint8(uint8_t* base64arr, const char* base64str)
{
  uint16_t buffer = 0, temp;
  int bcount = 0, idx = 0;
  const char* c = base64str;
  while(*c != '=' && *c != '\0')
  {
    temp = (uint16_t) decode_base64_table[(uint8_t)*c];
    bcount += 6;
    buffer = (buffer << 6) | temp;
    if(bcount >= 8)
    {
      bcount -= 8;
      *base64arr = (uint8_t)(buffer >> bcount);
      base64arr++;
      idx += 1;
    }
    c++;
  }

  return idx;
}

#ifdef __cplusplus
}
#endif

#endif //!WIFI_WEB_BASE64_H